<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBoxDirections.Text" xml:space="preserve">
    <value>                                          Инструкция к игре

Целью данного приложения является популяризация родного языка. 
Каждый может воспользоваться этой игрой для изучения родного языка или просто весело провести время с другом. 
Интереса добавляют невозможность пользования мышкой или переключение картинок по времени. 
Такие сложности усиливают азарт учащихся и невольно заставляют их запоминать осетинские слова с их переводами. 
Именно так и происходит обучение игроков.
Первое, что вы увидите, зайдя в игру, это главное меню с кнопками Играть и Выход 
После нажатия стартовой кнопки вы увидите окно, где вам надо будет вписать ваши имена для правильного подсчёта голосов 
 
Когда вы заполните форму и нажмёте на кнопку снизу, вы увидите форму с двумя таблицами. 
Это начальный этап крупного состязания. Первый игрок забирает себе левую, второй – правую. 
Ваша задача – отмечать в своей таблице картинку (в третьем раунде-слово), соответствующую той, которая высвечивается на форме. 
За каждый правильный ответ вы получаете по баллу. 
Правда тут есть маленькая загвоздка: здесь НЕЛЬЗЯ пользоваться мышкой – первый игрок может “ходить” только клавишами W, A, S, D, а второй- 8 4 2 6 малой клавиатуры (вверх, влево, вниз, вправо). 
Участники соответственно отмечают правильные ответы пробелом и 5(малой клавиатуры).  
Выигрывает тот, кто полностью очистит свою таблицу или по истечении всех картинок в таймере имеет наилучший результат. 
Не расслабляйтесь – у вас впереди ещё 2 раунда, сложность в которых будет увеличена.
 

 
 
Также наверху формы имеются две вкладки (Игра и Информация). 
Ткнув по первой (здесь можно использовать мышку), игрок увидит вкладки Выход, Подсказка и Пауза. Если вы хотите выйти, можно:
1)Выйти из приложения (совсем)
2)Сменить свои имена
3)Выйти в главное меню
 
Также возможно поставить игру на паузу, выбрав соответствующую вкладку. 
В таком случае на форме будет высвечиваться слово “Пауза”, смена картинок остановится, но вы не сможете ничего сделать, так как клавиатура будет заблокирована. 
Только нажав на вкладку “Вперёд” в том же разделе “Игра” (будет на месте Паузы), вы сможете продолжить игру, запустив чередование картинок. 
Играйте честно.
 
Как только вы завершили этот этап игры, автоматически запустится второй раунд, где русского слова под картинкой уже не будет.
Условия игры будут идентичными, только во вкладке “Информация” появится кнопка “Узнать текущий счёт” (это справедливо и для третьего раунда). 
Нажав на неё, вы можете узнать свои баллы за прошедшие раунды.
 
 
А вот третий раунд будет ещё сложнее. Здесь в таблицах уже не будет никаких картинок – только осетинские слова. 
Вам предстоит соотносить картинку с текстом в ячейке.
Результаты всех раундов записываются в файлы. После последнего файла игроки смогут увидеть таблицу со своими результатами и узнать имя победителя.
 </value>
  </data>
</root>